import platform
import sys
from core.base_module import BaseModule
from rich.console import Console

class DirtyCowChecker(BaseModule):
    """Checks for the Dirty COW (CVE-2016-5195) vulnerability."""

    def get_options(self):
        """
        Returns the options for this module.
        """
        return {
            'TARGET_HOST': ['localhost', 'Note: This module runs locally. This is for metadata.']
        }

    def run(self, options):
        """
        Executes the Dirty COW vulnerability check.
        """
        console = Console()

        if not sys.platform.startswith('linux'):
            console.print("[!] This module is only for Linux systems.", style="bold red")
            return

        console.print("[*] Checking for Dirty COW (CVE-2016-5195) vulnerability...")

        try:
            uname = platform.uname()
            kernel_version = uname.release
            console.print(f"[*] Detected Linux Kernel Version: {kernel_version}")

            # This is a simplified check. Vulnerable versions are generally >= 2.6.22
            # and patched in various versions of 4.8, 4.7, 4.4, etc.
            # A truly accurate check requires checking the specific distro patch level.
            version_parts = [int(part) for part in kernel_version.split('-')[0].split('.')]

            is_vulnerable = False
            if (version_parts[0] > 2) or (version_parts[0] == 2 and version_parts[1] > 6) or (version_parts[0] == 2 and version_parts[1] == 6 and version_parts[2] >= 22):
                # Kernels before 4.8.3, 4.7.9, 4.4.26 are generally vulnerable if unpatched.
                if version_parts[0] < 4 or \
                   (version_parts[0] == 4 and version_parts[1] < 8) or \
                   (version_parts[0] == 4 and version_parts[1] == 8 and version_parts[2] < 3):
                    is_vulnerable = True

            if is_vulnerable:
                console.print("[bold green][+] The system appears to be VULNERABLE to Dirty COW (CVE-2016-5195).[/bold green]")
                console.print("[yellow]  -> This check is based on kernel version only. The system may have been patched by the distributor.[/yellow]")
            else:
                console.print("[*] The kernel version appears to be patched or not vulnerable.")

        except Exception as e:
            console.print(f"[!] An unexpected error occurred: {e}", style="bold red")
